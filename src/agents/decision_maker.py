"""Decision Agent - Makes trading recommendations using DeepSeek AI"""
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from models.state import TradingState
from openai import OpenAI
from utils.indicators import calculate_stop_take_profit
import config
import json


def make_decision(state: TradingState) -> TradingState:
    """
    Make trading decision using DeepSeek AI
    
    Args:
        state: Current trading state with market data and analysis
        
    Returns:
        Updated state with trading recommendation
    """
    print(f"\nü§ñ Making trading decision with DeepSeek AI...")
    
    try:
        # Check if we have analysis data
        if state.get('error') or not state.get('analysis'):
            print("‚ùå Cannot make decision - no analysis available")
            return state
        
        market_data = state['market_data']
        analysis = state['analysis']
        indicators = analysis['indicators']
        ind_higher = indicators['higher_tf']['indicators']
        ind_lower = indicators['lower_tf']['indicators']
        tf_higher = indicators['higher_tf']['timeframe']
        tf_lower = indicators['lower_tf']['timeframe']
        orderbook = analysis['orderbook']
        sentiment = analysis['sentiment']
        
        # Initialize DeepSeek client
        client = OpenAI(
            api_key=config.DEEPSEEK_API_KEY,
            base_url=config.DEEPSEEK_BASE_URL
        )
        
        # Prepare prompt
        prompt = f"""Jsi expert na trading anal√Ωzu kryptomƒõn s multi-timeframe anal√Ωzou. Na z√°kladƒõ poskytnut√Ωch dat rozhodne≈° o trading doporuƒçen√≠ pro {state['symbol']}.

AKTU√ÅLN√ç CENA: {market_data['current_price']} USDT

MULTI-TIMEFRAME ANAL√ùZA:
{analysis['summary']}

=== {tf_higher.upper()} (TREND TIMEFRAME) ===
Urƒçuje celkov√Ω smƒõr trhu a hlavn√≠ trend.

- RSI: {ind_higher['rsi']['value']} ({ind_higher['rsi']['signal']})
- MACD: {ind_higher['macd']['signal']} (histogram: {ind_higher['macd']['histogram']})
- EMA Trend: {ind_higher['ema']['trend']}
- Bollinger Bands: {ind_higher['bollinger_bands']['position']}
- Support/Resistance: {ind_higher['support_resistance']['position']} (S: {ind_higher['support_resistance']['nearest_support']}, R: {ind_higher['support_resistance']['nearest_resistance']})
- Volume: {ind_higher['volume']['trend']} ({ind_higher['volume']['current_vs_avg']}x avg)

=== {tf_lower.upper()} (ENTRY TIMEFRAME) ===
Urƒçuje p≈ôesn√Ω vstupn√≠ bod a timing.

- RSI(14): {ind_lower['rsi']['value']} ({ind_lower['rsi']['signal']})
- RSI(7): {ind_lower['rsi_7']['value']} ({ind_lower['rsi_7']['turning']}) ‚Üê FAST reversal indicator!
- MACD: {ind_lower['macd']['signal']} (histogram: {ind_lower['macd']['histogram']})
- EMA Trend: {ind_lower['ema']['trend']}
- Bollinger Bands: {ind_lower['bollinger_bands']['position']} (squeeze: {ind_lower['bollinger_bands']['squeeze']})
- Support/Resistance: {ind_lower['support_resistance']['position']}
- ATR: ${ind_lower['atr']['value']} ({ind_lower['atr']['percentage']}% volatility)

=== MARKET CONDITION ===
Condition: {ind_lower['market_condition']['condition'].upper()} (choppy score: {ind_lower['market_condition']['choppy_score']})
{f"‚ö†Ô∏è  WARNING: {ind_lower['market_condition']['warning']}" if ind_lower['market_condition']['warning'] else "‚úÖ Market is trending - good for trend trades"}
Signals: {', '.join(ind_lower['market_condition']['signals']) if ind_lower['market_condition']['signals'] else 'None'}

=== ENTRY SETUP ANALYSIS ===
- Higher TF trend: {ind_higher['ema']['trend']} (main trend direction)
- Lower TF trend: {ind_lower['ema']['trend']} (current price action)
- Lower TF MACD: {ind_lower['macd']['signal']} (momentum change)
- Setup Type: {analysis['entry_quality']}
- Confluence: {analysis['confluence']}

=== TREND PATTERN ANALYSIS ===
Higher TF Pattern: {ind_higher.get('trend_pattern', {}).get('pattern', 'N/A')} ({ind_higher.get('trend_pattern', {}).get('trend_direction', 'N/A')})
Lower TF Pattern: {ind_lower.get('trend_pattern', {}).get('pattern', 'N/A')} ({ind_lower.get('trend_pattern', {}).get('trend_direction', 'N/A')})

=== TREND REVERSAL DETECTION ===
{f"üîÑ REVERSAL DETECTED: {analysis['reversal']['reversal_type']}" if analysis['reversal']['reversal_detected'] else "No reversal detected"}
{f"Strength: {analysis['reversal']['strength_label'].upper()} ({analysis['reversal']['strength']}/100)" if analysis['reversal']['reversal_detected'] else ""}
{f"Confirmations: {', '.join(analysis['reversal']['confirmation_factors'])}" if analysis['reversal']['reversal_detected'] else ""}

=== ORDERBOOK (REAL-TIME) ===
- Bid/Ask Imbalance: {orderbook['imbalance']['bid_percentage']:.1f}% / {orderbook['imbalance']['ask_percentage']:.1f}% (ratio: {orderbook['imbalance']['ratio']:.2f})
- Pressure: {orderbook['imbalance']['pressure']}
- Spread: {orderbook['spread']['percentage']:.4f}%
- Large orders (walls): {"Ano" if orderbook['walls']['has_significant_walls'] else "Ne"}

=== SENTIMENT ===
- Funding rate: {sentiment['funding_sentiment']} ({sentiment['funding_rate']:.6f})
- Volume momentum: {sentiment['volume_momentum']}
- Orderbook pressure: {sentiment['orderbook_pressure']}

ENTRY SETUP ANAL√ùZA:
Syst√©m detekoval setup: "{analysis['entry_quality']}"
{f"‚ö†Ô∏è D≈ÆLE≈ΩIT√â: Trend reversal detekov√°n ({analysis['reversal']['strength_label']} strength)!" if analysis['reversal']['reversal_detected'] else ""}

MO≈ΩN√â ENTRY SETUPS:

1. **pullback_reversal** - Pullback reversal entry
   Situace: Higher TF trend + Lower TF pullback se vrac√≠ zpƒõt do trendu
   Detekce: RSI(7) turning_up (EARLY!) nebo MACD crossover (CONFIRMED)
   V√Ωhody: ‚úÖ Nejlep≈°√≠ R/R (1:3+), ‚úÖ Entry na zaƒç√°tku pohybu, ‚úÖ Tight stop
   Nev√Ωhody: ‚ö†Ô∏è Pokud pullback moc hlubok√Ω, m≈Ø≈æe pokraƒçovat
   Kdy vstoupit:
   - EARLY: RSI(7) turning_up + RSI(7) < 40 ‚Üí Medium confidence (fast entry)
   - CONFIRMED: RSI(7) turning_up + MACD crossover ‚Üí High confidence (safer)
   - LATE: Pouze MACD crossover ‚Üí Medium confidence (may be late)
   
2. **trend_following** - Aligned running trend
   Situace: Oba TF aligned, trend bƒõ≈æ√≠
   V√Ωhody: ‚úÖ Siln√Ω momentum, ‚úÖ Jasn√Ω trend, ‚úÖ M≈Ø≈æe pokraƒçovat daleko
   Nev√Ωhody: ‚ö†Ô∏è Mo≈æn√° pozdƒõ, ‚ö†Ô∏è Hor≈°√≠ R/R (1:1.5), ‚ö†Ô∏è Bl√≠zko kr√°tkodob√©ho top
   Kdy vstoupit: Pokud siln√Ω orderbook support + volume increasing + RSI nen√≠ overbought/oversold

3. **wait_for_reversal** - V pullbacku, ƒçekat
   Situace: Higher TF trend OK, ale Lower TF v pullbacku (MACD je≈°tƒõ neobrac√≠)
   Action: NEUTRAL / WAIT (pullback nen√≠ dokonƒçen√Ω)

4. **conflicting/avoid** - Konfliktn√≠ sign√°ly
   Action: NEUTRAL / AVOID

5. **TREND REVERSAL** - Speci√°ln√≠ setup!
   Situace: Trend se MƒöN√ç (bearish ‚Üí bullish nebo bullish ‚Üí bearish)
   Detekce:
   - EMA crossover na higher TF
   - MACD alignment
   - Higher Highs/Lows pattern change
   - Volume surge
   V√Ωhody: ‚úÖ Catching reversal early, ‚úÖ Huge profit potential
   Nev√Ωhody: ‚ö†Ô∏è Risky (reversal m≈Ø≈æe failnout), ‚ö†Ô∏è Need strong confirmation
   Kdy vstoupit: 
   - STRONG reversal (75+) + orderbook potvrzuje ‚Üí HIGH confidence
   - MEDIUM reversal (60-75) + confirmace ‚Üí MEDIUM confidence
   - WEAK reversal (<60) ‚Üí WAIT for more confirmation

TVOJE √öLOHA:
Rozhodne≈° SAM na z√°kladƒõ V≈†ECH faktor≈Ø:
- Entry setup type a jeho v√Ωhody/nev√Ωhody
- Market condition: CHOPPY = AVOID/reduce! TRENDING = trade normally
- RSI(7): turning_up/down = early reversal signal (fast but noisier)
- RSI(14): oversold/overbought = confirmation
- MACD: trend confirmation (slower but reliable)
- Orderbook: Potvrzuje entry? (buy/sell pressure)
- Volume: Increasing = silnƒõj≈°√≠ sign√°l
- Support/Resistance: Bl√≠zko kl√≠ƒçov√Ωch level≈Ø?

P≈ò√çKLADY SPR√ÅVN√âHO ROZHODOV√ÅN√ç:

‚úÖ VSTUP p≈ôi pullback_reversal:
EARLY (aggressive):
- RSI(7) turning_up + RSI(7) < 40 ‚úì
- Orderbook potvrzuje ‚úì
‚Üí LONG s MEDIUM confidence (fast entry, best R/R but riskier)

CONFIRMED (recommended):
- RSI(7) turning_up + MACD crossover ‚úì
- RSI(14) healthy 40-65 ‚úì
- Orderbook potvrzuje ‚úì
‚Üí LONG/SHORT s HIGH confidence (best balance)

LATE:
- Pouze MACD crossover ‚úì
- RSI indicators OK ‚úì
‚Üí LONG/SHORT s MEDIUM confidence (safer but worse R/R)

‚úÖ VSTUP p≈ôi aligned_running (m≈Ø≈æe b√Ωt spr√°vnƒõ!):
- Siln√Ω momentum ‚úì
- Strong orderbook pressure ‚úì
- Volume increasing ‚úì
- RSI <65 (nen√≠ overbought) ‚úì
- Nen√≠ bl√≠zko resistance ‚úì
‚Üí LONG/SHORT s medium/high confidence

‚úÖ VSTUP p≈ôi STRONG trend reversal:
- Reversal strength 75+ ‚úì
- Multiple confirmations (4+) ‚úì
- Orderbook shift v novou direction ‚úì
- Volume surge ‚úì
- Pattern change (HH/HL nebo LH/LL) ‚úì
‚Üí LONG/SHORT s HIGH confidence (early reversal entry!)

‚ùå NEVSTUPOVAT:
- Market condition: CHOPPY (score 5+) ‚Üí AVOID trend trades!
- Market condition: RANGING (score 3-4) ‚Üí Be cautious, reduce size
- RSI(14) extr√©mn√≠ (>75 nebo <25) ‚Üí Too extended
- Orderbook conflicting ‚Üí No support
- RSI(7) false signal (whipsaw) ‚Üí Wait for MACD confirmation
‚Üí WAIT / NEUTRAL

‚ùå NEVSTUPOVAT p≈ôi aligned_running:
- RSI overbought/oversold
- Bl√≠zko resistance/support
- Orderbook slab√Ω nebo konfliktn√≠
‚Üí NEUTRAL

‚ùå NEVSTUPOVAT p≈ôi WEAK reversal:
- Reversal strength <60
- M√°lo confirmations (<3)
- Orderbook nesouhlas√≠
‚Üí WAIT (reversal nen√≠ confirmed)

RISK MANAGEMENT:
- Pokud doporuƒç√≠≈° LONG/SHORT, syst√©m automaticky vypoƒç√≠t√°:
  - Stop Loss: 1.5x ATR od entry (volatility-adjusted)
  - Take Profit: 3.0x ATR od entry (R/R ratio 1:2+)
  - ATR na {tf_lower}: ${ind_lower['atr']['value']} ({ind_lower['atr']['percentage']}%)
  
- Vysok√° ATR (>3%) = volatiln√≠ trh = ≈°ir≈°√≠ stops, vƒõt≈°√≠ profit potential
- N√≠zk√° ATR (<1%) = klidn√Ω trh = tight stops, men≈°√≠ pohyby

Na z√°kladƒõ V≈†ECH dat rozhodne≈°:
1. Action: LONG/SHORT/NEUTRAL
   - Zv√°≈æit entry setup + orderbook + RSI + volume + S/R + ATR
   - M≈Ø≈æe b√Ωt LONG/SHORT i p≈ôi aligned_running pokud v≈°echno potvrzuje!
   - ATR vysok√° (>3%) = vƒõt≈°√≠ risk, ale i reward
   
2. Confidence: low/medium/high
   - HIGH: V≈°echny faktory aligned (setup + OB + indicators + healthy RSI)
   - MEDIUM: Vƒõt≈°ina faktor≈Ø OK, nƒõco chyb√≠
   - LOW: Setup OK ale slab√° confirmace
   
3. Reasoning: Vysvƒõtli PROƒå vstupuje≈° nebo ne-vstupuje≈° (2-3 vƒõty)
   - Zahr≈à entry setup type
   - Zahr≈à confirming/conflicting faktory
   - M≈Ø≈æe≈° zm√≠nit ATR pokud relevantn√≠ (vysok√° volatilita)
   
4. Key factors: 3 hlavn√≠ d≈Øvody pro rozhodnut√≠

Odpovƒõz POUZE v tomto JSON form√°tu:
{{
  "action": "LONG",
  "confidence": "high",
  "reasoning": "...",
  "key_factors": ["factor1", "factor2", "factor3"]
}}"""
        
        # Call DeepSeek AI
        print("   Calling DeepSeek API...")
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": "You are a professional cryptocurrency trading analyst. Always respond with valid JSON only."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=500
        )
        
        # Parse response
        response_text = response.choices[0].message.content.strip()
        
        # Try to extract JSON if there's extra text
        if "```json" in response_text:
            response_text = response_text.split("```json")[1].split("```")[0].strip()
        elif "```" in response_text:
            response_text = response_text.split("```")[1].split("```")[0].strip()
        
        recommendation = json.loads(response_text)
        
        # Validate recommendation
        if 'action' not in recommendation or recommendation['action'] not in ['LONG', 'SHORT', 'NEUTRAL']:
            raise ValueError("Invalid action in recommendation")
        
        # Calculate ATR-based stop loss and take profit
        if recommendation['action'] in ['LONG', 'SHORT']:
            print(f"   Calculating ATR-based risk management...")
            
            # Use lower timeframe for more responsive stops
            candles_lower = market_data['timeframes'][tf_lower]
            
            direction = 'bullish' if recommendation['action'] == 'LONG' else 'bearish'
            risk_mgmt = calculate_stop_take_profit(candles_lower, direction)
            
            recommendation['risk_management'] = risk_mgmt
            recommendation['strategy'] = 'structured'  # Tag strategy
            
            print(f"\n‚úÖ [STRUCTURED] Decision made:")
            print(f"   Action: {recommendation['action']}")
            print(f"   Confidence: {recommendation.get('confidence', 'N/A')}")
            print(f"   Entry: ${risk_mgmt['entry']}")
            print(f"   Stop Loss: ${risk_mgmt['stop_loss']} (-{risk_mgmt['stop_distance_percentage']}%)")
            print(f"   Take Profit: ${risk_mgmt['take_profit']} (+{risk_mgmt['tp_distance_percentage']}%)")
            print(f"   Risk/Reward: 1:{risk_mgmt['risk_reward_ratio']}")
            print(f"   ATR: ${risk_mgmt['atr']} ({risk_mgmt['atr_percentage']}%)")
        else:
            recommendation['strategy'] = 'structured'
            print(f"\n‚úÖ [STRUCTURED] Decision made:")
            print(f"   Action: {recommendation['action']}")
            print(f"   Reasoning: {recommendation.get('reasoning', 'N/A')}")
        
        # Only update recommendation, don't return full state (for parallel execution)
        return {"recommendation_structured": recommendation}
        
    except json.JSONDecodeError as e:
        error_msg = f"Error parsing AI response: {str(e)}"
        print(f"‚ùå {error_msg}")
        print(f"   Response was: {response_text[:200]}...")
        return {"recommendation_structured": None}
    except Exception as e:
        error_msg = f"Error making decision: {str(e)}"
        print(f"‚ùå {error_msg}")
        return {"recommendation_structured": None}

